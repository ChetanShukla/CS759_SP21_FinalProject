#include "trig.cuh"
//#define _USE_MATH_DEFINES
//#include <math.h>
//// Precompute the sin and cos values. Print them in hex.
//union float_bits {
//	int i;
//	float f;
//};
//union float_bits bits;
//for (float i = 0.0; i < 360.0; i += (360.0 / 256.0)) {
//	//bits.f = sin((i * M_PI) / 180.0);
//	bits.f = cos((i * M_PI) / 180.0);
//	cout << "0x" << hex << bits.i << ",\n";
//}

const unsigned int sin_bits[NUM_DEGREE_CALC] = {
	0x0,
	0x3cc90ab0,
	0x3d48fb30,
	0x3d96a905,
	0x3dc8bd36,
	0x3dfab273,
	0x3e164083,
	0x3e2f10a2,
	0x3e47c5c2,
	0x3e605c13,
	0x3e78cfcc,
	0x3e888e93,
	0x3e94a031,
	0x3ea09ae5,
	0x3eac7cd4,
	0x3eb8442a,
	0x3ec3ef15,
	0x3ecf7bca,
	0x3edae880,
	0x3ee63375,
	0x3ef15aea,
	0x3efc5d27,
	0x3f039c3d,
	0x3f08f59b,
	0x3f0e39da,
	0x3f13682a,
	0x3f187fc0,
	0x3f1d7fd1,
	0x3f226799,
	0x3f273656,
	0x3f2beb4a,
	0x3f3085bb,
	0x3f3504f3,
	0x3f396842,
	0x3f3daef9,
	0x3f41d870,
	0x3f45e403,
	0x3f49d112,
	0x3f4d9f02,
	0x3f514d3d,
	0x3f54db31,
	0x3f584853,
	0x3f5b941a,
	0x3f5ebe05,
	0x3f61c598,
	0x3f64aa59,
	0x3f676bd8,
	0x3f6a09a7,
	0x3f6c835e,
	0x3f6ed89e,
	0x3f710908,
	0x3f731447,
	0x3f74fa0b,
	0x3f76ba07,
	0x3f7853f8,
	0x3f79c79d,
	0x3f7b14be,
	0x3f7c3b28,
	0x3f7d3aac,
	0x3f7e1324,
	0x3f7ec46d,
	0x3f7f4e6d,
	0x3f7fb10f,
	0x3f7fec43,
	0x3f800000,
	0x3f7fec43,
	0x3f7fb10f,
	0x3f7f4e6d,
	0x3f7ec46d,
	0x3f7e1324,
	0x3f7d3aac,
	0x3f7c3b28,
	0x3f7b14be,
	0x3f79c79d,
	0x3f7853f8,
	0x3f76ba07,
	0x3f74fa0b,
	0x3f731447,
	0x3f710908,
	0x3f6ed89e,
	0x3f6c835e,
	0x3f6a09a7,
	0x3f676bd8,
	0x3f64aa59,
	0x3f61c598,
	0x3f5ebe05,
	0x3f5b941a,
	0x3f584853,
	0x3f54db31,
	0x3f514d3d,
	0x3f4d9f02,
	0x3f49d112,
	0x3f45e403,
	0x3f41d870,
	0x3f3daef9,
	0x3f396842,
	0x3f3504f3,
	0x3f3085bb,
	0x3f2beb4a,
	0x3f273656,
	0x3f226799,
	0x3f1d7fd1,
	0x3f187fc0,
	0x3f13682a,
	0x3f0e39da,
	0x3f08f59b,
	0x3f039c3d,
	0x3efc5d27,
	0x3ef15aea,
	0x3ee63375,
	0x3edae880,
	0x3ecf7bca,
	0x3ec3ef15,
	0x3eb8442a,
	0x3eac7cd4,
	0x3ea09ae5,
	0x3e94a031,
	0x3e888e93,
	0x3e78cfcc,
	0x3e605c13,
	0x3e47c5c2,
	0x3e2f10a2,
	0x3e164083,
	0x3dfab273,
	0x3dc8bd36,
	0x3d96a905,
	0x3d48fb30,
	0x3cc90ab0,
	0x250d3132,
	0xbcc90ab0,
	0xbd48fb30,
	0xbd96a905,
	0xbdc8bd36,
	0xbdfab273,
	0xbe164083,
	0xbe2f10a2,
	0xbe47c5c2,
	0xbe605c13,
	0xbe78cfcc,
	0xbe888e93,
	0xbe94a031,
	0xbea09ae5,
	0xbeac7cd4,
	0xbeb8442a,
	0xbec3ef15,
	0xbecf7bca,
	0xbedae880,
	0xbee63375,
	0xbef15aea,
	0xbefc5d27,
	0xbf039c3d,
	0xbf08f59b,
	0xbf0e39da,
	0xbf13682a,
	0xbf187fc0,
	0xbf1d7fd1,
	0xbf226799,
	0xbf273656,
	0xbf2beb4a,
	0xbf3085bb,
	0xbf3504f3,
	0xbf396842,
	0xbf3daef9,
	0xbf41d870,
	0xbf45e403,
	0xbf49d112,
	0xbf4d9f02,
	0xbf514d3d,
	0xbf54db31,
	0xbf584853,
	0xbf5b941a,
	0xbf5ebe05,
	0xbf61c598,
	0xbf64aa59,
	0xbf676bd8,
	0xbf6a09a7,
	0xbf6c835e,
	0xbf6ed89e,
	0xbf710908,
	0xbf731447,
	0xbf74fa0b,
	0xbf76ba07,
	0xbf7853f8,
	0xbf79c79d,
	0xbf7b14be,
	0xbf7c3b28,
	0xbf7d3aac,
	0xbf7e1324,
	0xbf7ec46d,
	0xbf7f4e6d,
	0xbf7fb10f,
	0xbf7fec43,
	0xbf800000,
	0xbf7fec43,
	0xbf7fb10f,
	0xbf7f4e6d,
	0xbf7ec46d,
	0xbf7e1324,
	0xbf7d3aac,
	0xbf7c3b28,
	0xbf7b14be,
	0xbf79c79d,
	0xbf7853f8,
	0xbf76ba07,
	0xbf74fa0b,
	0xbf731447,
	0xbf710908,
	0xbf6ed89e,
	0xbf6c835e,
	0xbf6a09a7,
	0xbf676bd8,
	0xbf64aa59,
	0xbf61c598,
	0xbf5ebe05,
	0xbf5b941a,
	0xbf584853,
	0xbf54db31,
	0xbf514d3d,
	0xbf4d9f02,
	0xbf49d112,
	0xbf45e403,
	0xbf41d870,
	0xbf3daef9,
	0xbf396842,
	0xbf3504f3,
	0xbf3085bb,
	0xbf2beb4a,
	0xbf273656,
	0xbf226799,
	0xbf1d7fd1,
	0xbf187fc0,
	0xbf13682a,
	0xbf0e39da,
	0xbf08f59b,
	0xbf039c3d,
	0xbefc5d27,
	0xbef15aea,
	0xbee63375,
	0xbedae880,
	0xbecf7bca,
	0xbec3ef15,
	0xbeb8442a,
	0xbeac7cd4,
	0xbea09ae5,
	0xbe94a031,
	0xbe888e93,
	0xbe78cfcc,
	0xbe605c13,
	0xbe47c5c2,
	0xbe2f10a2,
	0xbe164083,
	0xbdfab273,
	0xbdc8bd36,
	0xbd96a905,
	0xbd48fb30,
	0xbcc90ab0
};
const unsigned int cos_bits[NUM_DEGREE_CALC] = {
	0x3f800000,
	0x3f7fec43,
	0x3f7fb10f,
	0x3f7f4e6d,
	0x3f7ec46d,
	0x3f7e1324,
	0x3f7d3aac,
	0x3f7c3b28,
	0x3f7b14be,
	0x3f79c79d,
	0x3f7853f8,
	0x3f76ba07,
	0x3f74fa0b,
	0x3f731447,
	0x3f710908,
	0x3f6ed89e,
	0x3f6c835e,
	0x3f6a09a7,
	0x3f676bd8,
	0x3f64aa59,
	0x3f61c598,
	0x3f5ebe05,
	0x3f5b941a,
	0x3f584853,
	0x3f54db31,
	0x3f514d3d,
	0x3f4d9f02,
	0x3f49d112,
	0x3f45e403,
	0x3f41d870,
	0x3f3daef9,
	0x3f396842,
	0x3f3504f3,
	0x3f3085bb,
	0x3f2beb4a,
	0x3f273656,
	0x3f226799,
	0x3f1d7fd1,
	0x3f187fc0,
	0x3f13682a,
	0x3f0e39da,
	0x3f08f59b,
	0x3f039c3d,
	0x3efc5d27,
	0x3ef15aea,
	0x3ee63375,
	0x3edae880,
	0x3ecf7bca,
	0x3ec3ef15,
	0x3eb8442a,
	0x3eac7cd4,
	0x3ea09ae5,
	0x3e94a031,
	0x3e888e93,
	0x3e78cfcc,
	0x3e605c13,
	0x3e47c5c2,
	0x3e2f10a2,
	0x3e164083,
	0x3dfab273,
	0x3dc8bd36,
	0x3d96a905,
	0x3d48fb30,
	0x3cc90ab0,
	0x248d3132,
	0xbcc90ab0,
	0xbd48fb30,
	0xbd96a905,
	0xbdc8bd36,
	0xbdfab273,
	0xbe164083,
	0xbe2f10a2,
	0xbe47c5c2,
	0xbe605c13,
	0xbe78cfcc,
	0xbe888e93,
	0xbe94a031,
	0xbea09ae5,
	0xbeac7cd4,
	0xbeb8442a,
	0xbec3ef15,
	0xbecf7bca,
	0xbedae880,
	0xbee63375,
	0xbef15aea,
	0xbefc5d27,
	0xbf039c3d,
	0xbf08f59b,
	0xbf0e39da,
	0xbf13682a,
	0xbf187fc0,
	0xbf1d7fd1,
	0xbf226799,
	0xbf273656,
	0xbf2beb4a,
	0xbf3085bb,
	0xbf3504f3,
	0xbf396842,
	0xbf3daef9,
	0xbf41d870,
	0xbf45e403,
	0xbf49d112,
	0xbf4d9f02,
	0xbf514d3d,
	0xbf54db31,
	0xbf584853,
	0xbf5b941a,
	0xbf5ebe05,
	0xbf61c598,
	0xbf64aa59,
	0xbf676bd8,
	0xbf6a09a7,
	0xbf6c835e,
	0xbf6ed89e,
	0xbf710908,
	0xbf731447,
	0xbf74fa0b,
	0xbf76ba07,
	0xbf7853f8,
	0xbf79c79d,
	0xbf7b14be,
	0xbf7c3b28,
	0xbf7d3aac,
	0xbf7e1324,
	0xbf7ec46d,
	0xbf7f4e6d,
	0xbf7fb10f,
	0xbf7fec43,
	0xbf800000,
	0xbf7fec43,
	0xbf7fb10f,
	0xbf7f4e6d,
	0xbf7ec46d,
	0xbf7e1324,
	0xbf7d3aac,
	0xbf7c3b28,
	0xbf7b14be,
	0xbf79c79d,
	0xbf7853f8,
	0xbf76ba07,
	0xbf74fa0b,
	0xbf731447,
	0xbf710908,
	0xbf6ed89e,
	0xbf6c835e,
	0xbf6a09a7,
	0xbf676bd8,
	0xbf64aa59,
	0xbf61c598,
	0xbf5ebe05,
	0xbf5b941a,
	0xbf584853,
	0xbf54db31,
	0xbf514d3d,
	0xbf4d9f02,
	0xbf49d112,
	0xbf45e403,
	0xbf41d870,
	0xbf3daef9,
	0xbf396842,
	0xbf3504f3,
	0xbf3085bb,
	0xbf2beb4a,
	0xbf273656,
	0xbf226799,
	0xbf1d7fd1,
	0xbf187fc0,
	0xbf13682a,
	0xbf0e39da,
	0xbf08f59b,
	0xbf039c3d,
	0xbefc5d27,
	0xbef15aea,
	0xbee63375,
	0xbedae880,
	0xbecf7bca,
	0xbec3ef15,
	0xbeb8442a,
	0xbeac7cd4,
	0xbea09ae5,
	0xbe94a031,
	0xbe888e93,
	0xbe78cfcc,
	0xbe605c13,
	0xbe47c5c2,
	0xbe2f10a2,
	0xbe164083,
	0xbdfab273,
	0xbdc8bd36,
	0xbd96a905,
	0xbd48fb30,
	0xbcc90ab0,
	0xa553c9ca,
	0x3cc90ab0,
	0x3d48fb30,
	0x3d96a905,
	0x3dc8bd36,
	0x3dfab273,
	0x3e164083,
	0x3e2f10a2,
	0x3e47c5c2,
	0x3e605c13,
	0x3e78cfcc,
	0x3e888e93,
	0x3e94a031,
	0x3ea09ae5,
	0x3eac7cd4,
	0x3eb8442a,
	0x3ec3ef15,
	0x3ecf7bca,
	0x3edae880,
	0x3ee63375,
	0x3ef15aea,
	0x3efc5d27,
	0x3f039c3d,
	0x3f08f59b,
	0x3f0e39da,
	0x3f13682a,
	0x3f187fc0,
	0x3f1d7fd1,
	0x3f226799,
	0x3f273656,
	0x3f2beb4a,
	0x3f3085bb,
	0x3f3504f3,
	0x3f396842,
	0x3f3daef9,
	0x3f41d870,
	0x3f45e403,
	0x3f49d112,
	0x3f4d9f02,
	0x3f514d3d,
	0x3f54db31,
	0x3f584853,
	0x3f5b941a,
	0x3f5ebe05,
	0x3f61c598,
	0x3f64aa59,
	0x3f676bd8,
	0x3f6a09a7,
	0x3f6c835e,
	0x3f6ed89e,
	0x3f710908,
	0x3f731447,
	0x3f74fa0b,
	0x3f76ba07,
	0x3f7853f8,
	0x3f79c79d,
	0x3f7b14be,
	0x3f7c3b28,
	0x3f7d3aac,
	0x3f7e1324,
	0x3f7ec46d,
	0x3f7f4e6d,
	0x3f7fb10f,
	0x3f7fec43
};